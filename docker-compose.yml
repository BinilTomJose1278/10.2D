version: '3.8'

services:
  # PostgreSQL Database for Customer Service
  customer-db:
    image: postgres:13
    environment:
      POSTGRES_DB: customer_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - customer_db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - ecommerce-network

  # PostgreSQL Database for Order Service
  order-db:
    image: postgres:13
    environment:
      POSTGRES_DB: order_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - order_db_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    networks:
      - ecommerce-network

  # PostgreSQL Database for Product Service
  product-db:
    image: postgres:13
    environment:
      POSTGRES_DB: product_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - product_db_data:/var/lib/postgresql/data
    ports:
      - "5434:5432"
    networks:
      - ecommerce-network

  # RabbitMQ Message Broker
  rabbitmq:
    image: rabbitmq:3-management
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - ecommerce-network

  # Customer Service
  customer-service:
    build: ./backend/customer_service
    ports:
      - "8002:8000"
    environment:
      DATABASE_URL: postgresql://postgres:postgres@customer-db:5432/customer_db
    depends_on:
      - customer-db
    networks:
      - ecommerce-network
    restart: unless-stopped

  # Product Service
  product-service:
    build: ./backend/product_service
    ports:
      - "8001:8000"
    environment:
      DATABASE_URL: postgresql://postgres:postgres@product-db:5432/product_db
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      RABBITMQ_USER: guest
      RABBITMQ_PASS: guest
    depends_on:
      - product-db
      - rabbitmq
    networks:
      - ecommerce-network
    restart: unless-stopped

  # Order Service
  order-service:
    build: ./backend/order_service
    ports:
      - "8003:8000"
    environment:
      DATABASE_URL: postgresql://postgres:postgres@order-db:5432/order_db
      CUSTOMER_SERVICE_URL: http://customer-service:8000
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      RABBITMQ_USER: guest
      RABBITMQ_PASS: guest
    depends_on:
      - order-db
      - customer-service
      - rabbitmq
    networks:
      - ecommerce-network
    restart: unless-stopped

  # Frontend
  frontend:
    build: ./frontend
    ports:
      - "80:80"
    depends_on:
      - customer-service
      - product-service
      - order-service
    networks:
      - ecommerce-network
    restart: unless-stopped

volumes:
  customer_db_data:
  order_db_data:
  product_db_data:
  rabbitmq_data:

networks:
  ecommerce-network:
    driver: bridge
