name: Production Deployment Pipeline

on:
  push:
    branches: [ main ]

env:
  AZURE_CONTAINER_REGISTRY: ${{ secrets.AZURE_CONTAINER_REGISTRY }}
  REGISTRY_USERNAME: ${{ secrets.REGISTRY_USERNAME }}
  REGISTRY_PASSWORD: ${{ secrets.REGISTRY_PASSWORD }}
  AZURE_RESOURCE_GROUP: ${{ secrets.AZURE_RESOURCE_GROUP }}
  AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

jobs:
  deploy-to-production:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Deploy to Production (all on :8000 with DNS)
      run: |
        # RabbitMQ (ensure DNS label exists; comment out if you already have it)
        az container create \
          --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \
          --name production-rabbitmq \
          --image rabbitmq:3-management \
          --ports 5672 15672 \
          --cpu 1 --memory 1 \
          --os-type Linux \
          --ip-address Public \
          --dns-name-label btj-rmq-aue \
          --restart-policy Always \
          --overwrite

        # PRODUCT (port 8000 + DNS)
        az container create \
          --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \
          --name production-product-service \
          --image ${{ env.AZURE_CONTAINER_REGISTRY }}/product-service:${{ github.sha }} \
          --ports 8000 \
          --cpu 1 --memory 1.5 \
          --os-type Linux \
          --ip-address Public \
          --dns-name-label btj-product-svc-aue \
          --environment-variables \
            POSTGRES_USER=postgres \
            POSTGRES_DB=product_db \
            POSTGRES_HOST=${{ secrets.PRODUCTION_POSTGRES_HOST }} \
            POSTGRES_PORT=5432 \
            RABBITMQ_HOST=btj-rmq-aue.australiaeast.azurecontainer.io \
            RABBITMQ_PORT=5672 \
            RABBITMQ_USER=${{ secrets.PRODUCTION_RABBITMQ_USER }} \
          --secure-environment-variables \
            POSTGRES_PASSWORD=${{ secrets.PRODUCTION_POSTGRES_PASSWORD }} \
            RABBITMQ_PASS=${{ secrets.PRODUCTION_RABBITMQ_PASS }} \
          --registry-login-server ${{ env.AZURE_CONTAINER_REGISTRY }} \
          --registry-username ${{ env.REGISTRY_USERNAME }} \
          --registry-password ${{ env.REGISTRY_PASSWORD }} \
          --restart-policy Always \
          --overwrite

        # CUSTOMER (port 8000 + DNS)
        az container create \
          --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \
          --name production-customer-service \
          --image ${{ env.AZURE_CONTAINER_REGISTRY }}/customer-service:${{ github.sha }} \
          --ports 8000 \
          --cpu 1 --memory 1.5 \
          --os-type Linux \
          --ip-address Public \
          --dns-name-label btj-customer-svc-aue \
          --environment-variables \
            POSTGRES_USER=postgres \
            POSTGRES_DB=customer_db \
            POSTGRES_HOST=${{ secrets.PRODUCTION_POSTGRES_HOST }} \
            POSTGRES_PORT=5432 \
            RABBITMQ_HOST=btj-rmq-aue.australiaeast.azurecontainer.io \
            RABBITMQ_PORT=5672 \
            RABBITMQ_USER=${{ secrets.PRODUCTION_RABBITMQ_USER }} \
          --secure-environment-variables \
            POSTGRES_PASSWORD=${{ secrets.PRODUCTION_POSTGRES_PASSWORD }} \
            RABBITMQ_PASS=${{ secrets.PRODUCTION_RABBITMQ_PASS }} \
          --registry-login-server ${{ env.AZURE_CONTAINER_REGISTRY }} \
          --registry-username ${{ env.REGISTRY_USERNAME }} \
          --registry-password ${{ env.REGISTRY_PASSWORD }} \
          --restart-policy Always \
          --overwrite

        # ORDER (port 8000 + DNS + service URLs)
        az container create \
          --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \
          --name production-order-service \
          --image ${{ env.AZURE_CONTAINER_REGISTRY }}/order-service:${{ github.sha }} \
          --ports 8000 \
          --cpu 1 --memory 1.5 \
          --os-type Linux \
          --ip-address Public \
          --dns-name-label btj-order-svc-aue \
          --environment-variables \
            POSTGRES_USER=postgres \
            POSTGRES_DB=order_db \
            POSTGRES_HOST=${{ secrets.PRODUCTION_POSTGRES_HOST }} \
            POSTGRES_PORT=5432 \
            RABBITMQ_HOST=btj-rmq-aue.australiaeast.azurecontainer.io \
            RABBITMQ_PORT=5672 \
            RABBITMQ_USER=${{ secrets.PRODUCTION_RABBITMQ_USER }} \
            PRODUCT_SERVICE_URL=http://btj-product-svc-aue.australiaeast.azurecontainer.io:8000 \
            CUSTOMER_SERVICE_URL=http://btj-customer-svc-aue.australiaeast.azurecontainer.io:8000 \
          --secure-environment-variables \
            POSTGRES_PASSWORD=${{ secrets.PRODUCTION_POSTGRES_PASSWORD }} \
            RABBITMQ_PASS=${{ secrets.PRODUCTION_RABBITMQ_PASS }} \
          --registry-login-server ${{ env.AZURE_CONTAINER_REGISTRY }} \
          --registry-username ${{ env.REGISTRY_USERNAME }} \
          --registry-password ${{ env.REGISTRY_PASSWORD }} \
          --restart-policy Always \
          --overwrite

        # FRONTEND (DNS + :80)
        az container create \
          --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \
          --name production-frontend \
          --image ${{ env.AZURE_CONTAINER_REGISTRY }}/frontend:${{ github.sha }} \
          --ports 80 \
          --cpu 1 --memory 1 \
          --os-type Linux \
          --ip-address Public \
          --dns-name-label btj-frontend-aue \
          --registry-login-server ${{ env.AZURE_CONTAINER_REGISTRY }} \
          --registry-username ${{ env.REGISTRY_USERNAME }} \
          --registry-password ${{ env.REGISTRY_PASSWORD }} \
          --restart-policy Always \
          --overwrite

    - name: Verify Production Deployment (FQDNs on :8000)
      run: |
        CUSTOMER_FQDN=$(az container show -g ${{ env.AZURE_RESOURCE_GROUP }} -n production-customer-service --query ipAddress.fqdn -o tsv)
        PRODUCT_FQDN=$(az container show -g ${{ env.AZURE_RESOURCE_GROUP }} -n production-product-service  --query ipAddress.fqdn -o tsv)
        ORDER_FQDN=$(az container show   -g ${{ env.AZURE_RESOURCE_GROUP }} -n production-order-service    --query ipAddress.fqdn -o tsv)
        FRONTEND_FQDN=$(az container show -g ${{ env.AZURE_RESOURCE_GROUP }} -n production-frontend       --query ipAddress.fqdn -o tsv)

        curl -f http://$CUSTOMER_FQDN:8000/health
        curl -f http://$PRODUCT_FQDN:8000/health
        curl -f http://$ORDER_FQDN:8000/health
        curl -f http://$FRONTEND_FQDN

        echo "Frontend: http://$FRONTEND_FQDN"
        echo "Customer: http://$CUSTOMER_FQDN:8000"
        echo "Product : http://$PRODUCT_FQDN:8000"
        echo "Order   : http://$ORDER_FQDN:8000"
